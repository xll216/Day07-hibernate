<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.lanou.domain.Classes">
        <id name="id">
            <generator class="native"/>
        </id>

        <!--用户名称-->
        <property name="name"/>

        <!--双向1-n，在n（订单）能找到对应的1（用户），
        也能在1（用户）找到对应的n的集合（订单集合）；
        在n的一方定义many-to-one，在1的一方定义set；
        set：在1的一方定义n的集合
            name：在1的一方中对应n的属性集合的名称
            table：n的一方对应的数据库表名，参见n的映射文件中的table属性配置
            inverse：配置1与n的维护关系有谁控制，false：主动方；true：被动方；
                    通常在n的一方配置为false即主动维护二者之间的关系；
                    inverse设置的是当前属性是主动方还是被动方，
                    1、如果设置为主动方，则删除用户时，不会主动去删除订单表中的数据，
                        即使设置了级联关系为all；
                    2、如果设置为被动方，则删除用户时，可以通过级联关系将订单表对应的
                        数据删除；
            cascade：级联属性，可以在<set>,<many-to-one>,<one-to-one>标签中使用；
                    代表操作当前对象时是否会级联其他对象；
                    all：当用session的save、update、delete、saveOrUpdate等级联到
                         其他对象；
                    save-update：当用session的save、update、saveOrUpdate会级联到
                         其他对象；
                    delete：当用session的delete删除时会级联到其他对象；


        key：1与n关联的外键名称，参见n的一方中many-to-one中定义的column
        one-to-many：在1的一方定义的n的类路径
        -->
        <set name="students"
             inverse="true"
             cascade="save-update">
            <key column="classes_id"/>
            <one-to-many class="com.lanou.domain.Student"/>
        </set>
    </class>

</hibernate-mapping>